server:
  port: 18086
  servlet:
    context-path: /boot

spring:
  servlet:
    multipart:
      # 开启multipart上传功能
      enabled: true
      # 文件写入磁盘的阈值
      file-size-threshold: 2KB
      # 最大文件大小
      max-file-size: 10MB
      # 最大请求大小
      max-request-size: 10MB
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    dynamic:
      # 通过http://ip:port/boot/druid/index.html访问
      druid:
        # 初始化、最小、最大 值
        initial-size: 5
        min-idle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间,单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache,并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters,去掉后监控界面sql无法统计,'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能,慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      datasource:
        master:
          url: jdbc:mysql://47.104.179.187:6003/sk-se-boot-mqtt?characterEncoding=UTF-8&useUnicode=true&useSSL=false&connectTimeout=60000&socketTimeout=1800
          username: root
          password:  jkauto@123
          driver-class-name: com.mysql.cj.jdbc.Driver
  #redis 配置
  redis:
    database: 4
    host: 192.168.2.125
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    password: ''
    port: 6379

mybatis-plus:
  mapper-locations: classpath*:com/sonin/modules/**/xml/*Mapper.xml
  # 是否打印控制台
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

biz:
  # 删除n天前的表(包含)
  deleteTableDay: 10
  # 是否启动redis队列消费数据入库
  redisConsumerFlag: true
  # 是否开启定时任务
  scheduled:
    enable: true
    # 创建表
    createTableCron: 0 0 1 * * ?
    # 删除表
    deleteTableCron: 0 0 1 * * ?
  mqtt:
    # 是否开启mqtt订阅
    enable: true
    username: admin
    password: public
    url: tcp://118.190.97.62:18833
    clientId: emqx
    timeout: 100
    keepAlive: 200
    qos: 1
    # 订阅主题
    topic: zzdd02
